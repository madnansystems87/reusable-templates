name: Provision Infrastructure for the Application

permissions:
  id-token: write
  contents: write
  pull-requests: write

on:
  workflow_call:
    inputs:
      TF_ENVIRONMENT:
        description: Terraform environment (e.g., dev, prod)
        required: true
        type: string
      ROLE_NAME:
        description: Role name to assume
        required: true
        type: string
    secrets:
      AWS_REGION:
        required: true
      S3_AWS_REGION:
        required: true
      TF_STATE_S3_BUCKET:
        required: true
      TF_STATE_FILE_KEY:
        required: true
      TF_STATE_DYNAMODB_TABLE:
        required: true
      AWS_ACCOUNT_ID:
        required: true

jobs:
  provision-infrastructure:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.TF_ENVIRONMENT }}
    steps:
      - name: Clone Infrastructure Repository
        run: git clone --branch main https://github.com/madnansystems87/infrastructure-webapp.git

      - name: Verify `prod.tfvars` File
        run: |
          if [ ! -f "./infrastructure-webapp/terraform/environments/${{ inputs.TF_ENVIRONMENT }}/prod.tfvars" ]; then
            echo "Error: prod.tfvars file is missing!"
            exit 1
          else
            echo "prod.tfvars file exists:"
            cat ./infrastructure-webapp/terraform/environments/${{ inputs.TF_ENVIRONMENT }}/prod.tfvars
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ inputs.ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          cd ./infrastructure-webapp
          terraform init \
            -backend-config="region=${{ secrets.S3_AWS_REGION }}" \
            -backend-config="bucket=${{ secrets.TF_STATE_S3_BUCKET }}" \
            -backend-config="key=${{ inputs.TF_ENVIRONMENT }}/${{ secrets.TF_STATE_FILE_KEY }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_STATE_DYNAMODB_TABLE }}"

      - name: Terraform Plan
        run: |
          cd ./infrastructure-webapp
          terraform plan -var-file=./terraform/environments/${{ inputs.TF_ENVIRONMENT }}/prod.tfvars

      - name: Terraform Apply
        run: |
          cd ./infrastructure-webapp
          terraform apply -var-file=./terraform/environments/${{ inputs.TF_ENVIRONMENT }}/prod.tfvars -auto-approve